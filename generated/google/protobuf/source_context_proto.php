<?hh // strict
namespace google\protobuf;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source: google/protobuf/source_context.proto

class SourceContext implements \Protobuf\Message {
  public string $file_name;
  private string $XXX_unrecognized;

  public function __construct(shape(
    ?'file_name' => string,
  ) $s = shape()) {
    $this->file_name = $s['file_name'] ?? '';
    $this->XXX_unrecognized = '';
  }

  public function MessageName(): string {
    return "google.protobuf.SourceContext";
  }

  public static function ParseFrom(string $input): ?SourceContext {
    $msg = new SourceContext();
    $e = \Protobuf\Unmarshal($input, $msg);
    if (!$e->Ok()) {
      return null;
    }
    return $msg;
  }

  public function MergeFrom(\Protobuf\Internal\Decoder $d): void {
    while (!$d->isEOF()){
      list($fn, $wt) = $d->readTag();
      switch ($fn) {
        case 1:
          $this->file_name = $d->readString();
          break;
        default:
          $d->skip($fn, $wt);
      }
    }
    $this->XXX_unrecognized .= $d->skippedRaw();
  }

  public function WriteTo(\Protobuf\Internal\Encoder $e): void {
    if ($this->file_name !== '') {
      $e->writeTag(1, 2);
      $e->writeString($this->file_name);
    }
    $e->writeRaw($this->XXX_unrecognized);
  }

  public function WriteJsonTo(\Protobuf\Internal\JsonEncoder $e): void {
    $e->writeString('file_name', 'fileName', $this->file_name, false);
  }

  public function MergeJsonFrom(mixed $m): void {
    if ($m === null) return;
    $d = \Protobuf\Internal\JsonDecoder::readObject($m);
    foreach ($d as $k => $v) {
      switch ($k) {
        case 'file_name': case 'fileName':
          $this->file_name = \Protobuf\Internal\JsonDecoder::readString($v);
          break;
        default:
        break;
      }
    }
  }

  public function CopyFrom(\Protobuf\Message $o): \Errors\Error {
    if (!($o is SourceContext)) {
      return \Errors\Errorf('CopyFrom failed: incorrect type received: %s', $o->MessageName());
    }
    $this->file_name = $o->file_name;
    $this->XXX_unrecognized = $o->XXX_unrecognized;
    return \Errors\Ok();
  }

  public function MergeMessageFrom(\Protobuf\Message $o): \Errors\Error {
    if (!($o is SourceContext)) {
      return \Errors\Errorf('MergeMessageFrom failed: incorrect type received: %s', $o->MessageName());
    }
    if ($o->file_name !== '') {
      $this->file_name = $o->file_name;
    }
    $this->XXX_unrecognized .= $o->XXX_unrecognized;
    return \Errors\Ok();
  }
}


class XXX_FileDescriptor_google_protobuf_source_context__proto implements \Protobuf\Internal\FileDescriptor {
  const string NAME = 'google/protobuf/source_context.proto';
  public function Name(): string {
    return self::NAME;
  }

  public function FileDescriptorProtoBytes(): string {
    // 687 bytes of gzipped FileDescriptorProto as a string
    return (string)\gzuncompress("\x78\xda\xe2\x52\x49\xcf\xcf\x4f\xcf\x49\xd5\x2f\x28\xca\x2f\xc9\x4f\x2a\x4d\xd3\x2f\xce\x2f\x2d\x4a\x4e\x8d\x4f\xce\xcf\x2b\x49\xad\x28\xd1\x3\x8b\xb\xf1\x43\x54\xe9\xc1\x54\x29\xe9\x70\xf1\x6\x83\x15\x3a\x43\xd4\x9\x49\x73\x71\xa6\x65\xe6\xa4\xc6\xe7\x25\xe6\xa6\x4a\x30\x2a\x30\x6a\x70\x6\x71\x80\x4\xfc\x12\x73\x53\x9d\xba\x18\xb9\x84\x93\xf3\x73\xf5\xd0\x4c\x71\x12\x42\x31\x23\x0\x24\x1c\xc0\x18\x65\x6\x55\x96\x9e\x9f\x93\x98\x97\xae\x97\x5f\x94\x8e\x70\x5d\x49\x65\x41\x6a\xb1\x7e\x76\x5e\x7e\x79\x1e\xd4\xa5\x50\x87\x16\x24\x2d\x62\x62\x76\xf\x70\x5a\xc5\x24\xe7\xe\xd1\x1e\x0\xd5\xa3\x17\x9e\x9a\x93\xe3\xd\xd2\x11\x2\xd2\x9c\xc4\x6\x36\xcc\x18\x10\x0\x0\xff\xff\x74\xa8\x5a\xb");
  }
}
